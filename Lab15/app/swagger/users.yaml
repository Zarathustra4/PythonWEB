swagger: '2.0'
info:
  title: 'User API'
  version: '1.0.0'
basePath: '/api/users'
schemes:
  - 'http'
consumes:
  - 'application/json'
produces:
  - 'application/json'
paths:
  /:
    get:
      tags:
        - 'Users'
      summary: 'Get all users'
      responses:
        '200':
          description: 'List of users'
          schema:
            type: 'array'
            items:
              $ref: '#/definitions/UserResponse'
    post:
      tags:
        - 'Users'
      summary: 'Create a new user'
      parameters:
        - in: 'body'
          name: 'body'
          description: 'User data'
          required: true
          schema:
            $ref: '#/definitions/PostUser'
      responses:
        '201':
          description: 'User created'
          schema:
            $ref: '#/definitions/UserResponse'
        '400':
          description: 'Bad Request'
  /{user_id}:
    get:
      tags:
        - 'Users'
      summary: 'Get user by ID'
      parameters:
        - in: 'path'
          name: 'user_id'
          type: 'integer'
          required: true
          description: 'User ID'
      responses:
        '200':
          description: 'User details'
          schema:
            $ref: '#/definitions/UserResponse'
        '404':
          description: 'User not found'
    delete:
      tags:
        - 'Users'
      summary: 'Delete user by ID'
      parameters:
        - in: 'path'
          name: 'user_id'
          type: 'integer'
          required: true
          description: 'User ID'
      responses:
        '200':
          description: 'User deleted'
        '404':
          description: 'User not found'
    put:
      tags:
        - 'Users'
      summary: 'Update user by ID'
      parameters:
        - in: 'path'
          name: 'user_id'
          type: 'integer'
          required: true
          description: 'User ID'
        - in: 'body'
          name: 'body'
          description: 'User data'
          required: true
          schema:
            $ref: '#/definitions/PutUser'
      responses:
        '200':
          description: 'User updated'
          schema:
            $ref: '#/definitions/UserResponse'
        '400':
          description: 'Bad Request'
        '404':
          description: 'User not found'
definitions:
  UserResponse:
    type: 'object'
    properties:
      username:
        type: 'string'
        description: 'Username'
      email:
        type: 'string'
        description: 'Email'
      about:
        type: 'string'
        description: 'Information about user'
  PostUser:
    type: 'object'
    properties:
      username:
        type: 'string'
        description: 'Username'
      email:
        type: 'string'
        description: 'Email'
      about:
        type: 'string'
        description: 'Information about user'
      password:
        type: 'string'
        description: "Password"
  PutUser:
    type: 'object'
    properties:
      username:
        type: 'string'
        description: 'Username'
      email:
        type: 'string'
        description: 'Email'
      about:
        type: 'string'
        description: 'Information about user'
      password:
        type: 'string'
        description: "Password"
      new_password:
        type: 'string'
        description: 'New Password'
